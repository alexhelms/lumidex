<UserControl
    x:Class="Lumidex.Features.MainSearch.SearchResultsView"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:Lumidex.Behaviors"
    xmlns:common="using:Lumidex.Common"
    xmlns:converter="using:Lumidex.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:filter="using:Lumidex.Features.MainSearch.Filters"
    xmlns:i="https://github.com/projektanker/icons.avalonia"
    xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
    xmlns:interactivity="using:Avalonia.Xaml.Interactivity"
    xmlns:lumidex="using:Lumidex"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:search="using:Lumidex.Features.MainSearch"
    xmlns:system="using:System"
    d:DesignHeight="800"
    d:DesignWidth="1200"
    x:DataType="search:SearchResultsViewModel"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converter:TimeSpanToTotalSecondsConverter x:Key="TimeSpanToTotalSeconds" />
        <converter:FilenameConverter x:Key="Filename" />
        <converter:ColorToBrushConverter x:Key="ColorToBrush" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*" MinWidth="100" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="0.75*" MinWidth="100" />
        </Grid.ColumnDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="3*" MinHeight="200" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1*" MinHeight="200" />
            </Grid.RowDefinitions>

            <DockPanel Grid.Row="0">
                <!--  Result Stats  -->
                <Border
                    Padding="6"
                    BorderBrush="#55656565"
                    BorderThickness="1,0,1,1"
                    DockPanel.Dock="Bottom">
                    <StackPanel Orientation="Horizontal">

                        <TextBlock Text="Rows" />
                        <TextBlock Margin="8,0,0,0" Text="{Binding SearchResults.Count, FallbackValue=0}" />
                        <TextBlock
                            Margin="8,0"
                            Opacity="0.3"
                            Text="|" />

                        <TextBlock Text="Lights" />
                        <TextBlock Margin="8,0,0,0" Text="{Binding LightCount, FallbackValue=0}" />
                        <TextBlock
                            Margin="8,0"
                            Opacity="0.3"
                            Text="|" />

                        <TextBlock Text="Flats" />
                        <TextBlock Margin="8,0,0,0" Text="{Binding FlatCount, FallbackValue=0}" />
                        <TextBlock
                            Margin="8,0"
                            Opacity="0.3"
                            Text="|" />

                        <TextBlock Text="Darks" />
                        <TextBlock Margin="8,0,0,0" Text="{Binding DarkCount, FallbackValue=0}" />
                        <TextBlock
                            Margin="8,0"
                            Opacity="0.3"
                            Text="|" />

                        <TextBlock Text="Bias" />
                        <TextBlock Margin="8,0,0,0" Text="{Binding BiasCount, FallbackValue=0}" />
                        <TextBlock
                            Margin="8,0"
                            Opacity="0.3"
                            Text="|" />

                        <TextBlock Text="Unknown" />
                        <TextBlock Margin="8,0,0,0" Text="{Binding UnknownCount, FallbackValue=0}" />
                        <TextBlock
                            Margin="8,0"
                            Opacity="0.3"
                            Text="|" />

                        <TextBlock Text="Selected" />
                        <TextBlock Margin="8,0,0,0" Text="{Binding SelectedSearchResults.Count, FallbackValue=0}" />
                        <TextBlock
                            Margin="8,0"
                            Opacity="0.3"
                            Text="|" />

                    </StackPanel>
                </Border>

                <!--  Search Results  -->
                <DataGrid
                    x:Name="SearchResultsDataGrid"
                    Grid.Column="0"
                    Background="#333538"
                    BorderBrush="#33656565"
                    BorderThickness="1"
                    CanUserReorderColumns="True"
                    CanUserResizeColumns="True"
                    GridLinesVisibility="Horizontal"
                    IsReadOnly="True"
                    ItemsSource="{Binding SearchResults}"
                    SelectionChanged="DataGrid_SelectionChanged"
                    SelectionMode="Extended"
                    VerticalScrollBarVisibility="Visible">
                    <DataGrid.Styles>
                        <Style Selector="ScrollBar">
                            <Setter Property="AllowAutoHide" Value="False" />
                        </Style>
                        <Style Selector="DataGridColumnHeader">
                            <Setter Property="Foreground" Value="White" />
                        </Style>
                        <Style Selector="DataGridRow">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Command="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ShowEditDialogCommand}" Header="Edit" />
                                        <MenuItem Command="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).RemoveSelectedItemsCommand}" Header="Remove" />
                                        <Separator />
                                        <MenuItem
                                            Header="Add Tag"
                                            IsEnabled="{Binding !!#SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).AllTags.Count}"
                                            ItemsSource="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).AllTags}">
                                            <MenuItem.Styles>
                                                <Style Selector="MenuItem > MenuItem">
                                                    <Setter Property="Command" Value="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).AddTagCommand}" />
                                                    <Setter Property="CommandParameter" Value="{ReflectionBinding}" />
                                                </Style>
                                            </MenuItem.Styles>
                                            <MenuItem.ItemTemplate>
                                                <DataTemplate DataType="common:TagViewModel">
                                                    <TextBlock
                                                        Padding="8,4"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                        Background="{Binding Brush}"
                                                        Text="{Binding Name}" />
                                                </DataTemplate>
                                            </MenuItem.ItemTemplate>
                                        </MenuItem>
                                        <MenuItem
                                            Command="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).RemoveAllTagsFromSelectionCommand}"
                                            Header="Remove Tags"
                                            IsEnabled="{ReflectionBinding !!Tags.Count}" />
                                        <Separator />
                                        <MenuItem Command="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ShowFileExportDialogCommand}" Header="Export Files" />
                                        <MenuItem Command="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ShowAstrobinExportDialogCommand}" Header="Export Astrobin CSV" />
                                        <Separator />
                                        <MenuItem
                                            Command="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).OpenInPixInsightCommand}"
                                            CommandParameter="{Binding}"
                                            Header="Open in PixInsight"
                                            IsEnabled="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).SelectedSearchResultsCount, Converter={x:Static converter:FuncConverters.EqualToOne}}" />
                                        <MenuItem
                                            Command="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).OpenInExplorerCommand}"
                                            CommandParameter="{Binding}"
                                            Header="{Binding Source={x:Static lumidex:Constants.OpenInExplorer}}"
                                            IsEnabled="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).SelectedSearchResultsCount, Converter={x:Static converter:FuncConverters.EqualToOne}}" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.Styles>
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding LibraryName, Mode=OneWay}"
                            Header="Library" />
                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding ObjectName, Mode=OneWay}"
                            Header="Name" />
                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Type, Mode=OneWay}"
                            Header="Type" />
                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Kind, Mode=OneWay}"
                            Header="Kind" />
                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Exposure, Mode=OneWay, StringFormat={}###0.###}"
                            Header="Exposure (s)" />
                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding FilterName, Mode=OneWay}"
                            Header="Filter" />
                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding ObservationTimestampLocal, Mode=OneWay, StringFormat={}yyyy-MM-dd HH:mm:ss, TargetNullValue={}}"
                            Header="Observation (Local)" />
                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding ObservationTimestampUtc, Mode=OneWay, StringFormat={}yyyy-MM-dd HH:mm:ss, TargetNullValue={}}"
                            Header="Observation (UTC)" />
                        <DataGridTemplateColumn x:DataType="common:ImageFileViewModel" Header="Filename">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="common:ImageFileViewModel">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Text="{Binding Path, Converter={StaticResource Filename}, Mode=OneWay}"
                                        ToolTip.Tip="{Binding Path, Mode=OneWay}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:DataType="common:ImageFileViewModel" Header="Tags">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="common:ImageFileViewModel">
                                    <ItemsControl ItemsSource="{Binding Tags, Mode=OneWay}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel VerticalAlignment="Center" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="common:TagViewModel">
                                                <TextBlock
                                                    Margin="4,0,0,0"
                                                    Padding="4,2"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Background="{Binding Brush, Mode=OneWay}"
                                                    Text="{Binding Name, Mode=OneWay}">
                                                    <TextBlock.ContextMenu>
                                                        <ContextMenu Tag="{Binding $parent[DataGridRow].DataContext, Mode=OneWay}">
                                                            <MenuItem Click="RemoveTagMenuItem_Click" Header="Remove Tag" />
                                                        </ContextMenu>
                                                    </TextBlock.ContextMenu>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--  ADVANCED FILTERS  -->
                        <!--  Please try to keep alphabetical by filter type.  -->

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Airmass, Mode=OneWay}"
                            Header="Airmass"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:AirmassFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Altitude, Mode=OneWay}"
                            Header="Altitude (&#186;)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:AltitudeFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Azimuth, Mode=OneWay}"
                            Header="Azimuth (&#186;)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:AzimuthFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Binning, Mode=OneWay}"
                            Header="Binning"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:CameraBinningFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding CameraGain, Mode=OneWay}"
                            Header="Gain"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:CameraGainFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding CameraName, Mode=OneWay}"
                            Header="Camera Name"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:CameraNameFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding CameraOffset, Mode=OneWay}"
                            Header="Offset"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:CameraOffsetFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding CameraTemperature, Mode=OneWay}"
                            Header="Camera Temperature (&#186;C)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:CameraTemperatureFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding CameraTemperatureSetPoint, Mode=OneWay}"
                            Header="Camera Temperature Set Point (&#186;C)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:CameraTemperatureSetPointFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Declination, Mode=OneWay}"
                            Header="Declination (&#186;)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:DeclinationFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding DewPoint, Mode=OneWay}"
                            Header="Dew Point (&#186;C)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:DewPointFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Elevation, Mode=OneWay}"
                            Header="Elevation (m)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:ElevationFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding FilterWheelName, Mode=OneWay}"
                            Header="Filter Wheel Name"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:FilterWheelNameFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding FocalLength, Mode=OneWay}"
                            Header="Focal Length (mm)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:FocalLengthFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding FocuserName, Mode=OneWay}"
                            Header="Focuser Name"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:FocuserNameFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding FocuserPosition, Mode=OneWay}"
                            Header="Focuser Position"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:FocuserPositionFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding FocuserTemperature, Mode=OneWay}"
                            Header="Focuser Temperature (&#186;C)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:FocuserTemperatureFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Humidity, Mode=OneWay}"
                            Header="Humidity (%)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:HumidityFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Latitude, Mode=OneWay}"
                            Header="Latitude (&#186;)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:LatitudeFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Longitude, Mode=OneWay}"
                            Header="Longitude (&#186;)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:LongitudeFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding PixelSize, Mode=OneWay}"
                            Header="Pixel Size (µm)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:PixelSizeFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Pressure, Mode=OneWay}"
                            Header="Pressure (mbar)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:PressureFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding ReadoutMode, Mode=OneWay}"
                            Header="Readout Mode"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:ReadoutModeFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding RightAscension, Converter={x:Static converter:FuncConverters.DegreesToHours}, Mode=OneWay}"
                            Header="Right Ascension (hr)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:ReadoutModeFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding RotatorName, Mode=OneWay}"
                            Header="Rotator Name"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:RotatorNameFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding RotatorPosition, Mode=OneWay}"
                            Header="Rotator Position"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:RotatorPositionFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding TelescopeName, Mode=OneWay}"
                            Header="Telescope Name"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:TelescopeNameFilter}, Mode=OneWay}" />

                        <DataGridTextColumn
                            x:DataType="common:ImageFileViewModel"
                            Binding="{Binding Temperature, Mode=OneWay}"
                            Header="Temperature (&#186;C)"
                            IsVisible="{Binding #SearchResultsDataGrid.((search:SearchResultsViewModel)DataContext).ActiveFilters, Converter={x:Static converter:FuncConverters.ContainsFilter}, ConverterParameter={x:Type filter:TemperatureFilter}, Mode=OneWay}" />

                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>

            <GridSplitter
                Grid.Row="1"
                MinHeight="4"
                Margin="0,4"
                Background="#55656565"
                ResizeDirection="Rows" />

            <!--  Actions  -->
            <Border
                Grid.Row="2"
                BorderBrush="#33656565"
                BorderThickness="1,0,1,1">
                <ContentControl Content="{Binding ActionsViewModel}" />
            </Border>

        </Grid>

        <Border
            Grid.Column="0"
            Background="#11ffffff"
            IsVisible="{Binding IsBusy, FallbackValue=False}">
            <i:Icon
                Animation="Pulse"
                FontSize="48"
                Value="fa-spinner" />
        </Border>

        <GridSplitter
            Grid.Column="1"
            MinWidth="4"
            Margin="4,0"
            Background="#55656565"
            ResizeDirection="Columns" />

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="200" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" MinHeight="200" />
            </Grid.RowDefinitions>
            <DockPanel Grid.Row="0">
                <Grid Margin="0,8,0,0" DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Total Disk" />
                    <TextBlock
                        Grid.Column="1"
                        Text="{Binding TotalFileSize, TargetNullValue={}--}"
                        TextAlignment="Right" />
                </Grid>

                <Grid Margin="0,8,0,0" DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Total Integration" />
                    <TextBlock
                        Grid.Column="1"
                        Text="{Binding TotalIntegration, TargetNullValue={}--, StringFormat={}{0} hr}"
                        TextAlignment="Right" />
                </Grid>

                <Grid
                    x:Name="CopyGrid"
                    Margin="0,5,0,0"
                    HorizontalAlignment="Right"
                    DockPanel.Dock="Top">
                    <FlyoutBase.AttachedFlyout>
                        <Flyout Placement="Left" ShowMode="TransientWithDismissOnPointerMoveAway">
                            <Border Background="#333538">
                                <TextBlock
                                    Foreground="White"
                                    Text="Copied!"
                                    TextAlignment="Center" />
                            </Border>
                        </Flyout>
                    </FlyoutBase.AttachedFlyout>
                    <SplitButton
                        Click="CopyToClipboard_Click"
                        Command="{Binding CopyIntegrationSummaryCommand}"
                        ToolTip.Placement="LeftEdgeAlignedTop"
                        ToolTip.Tip="Copy Integration Summary"
                        ToolTip.VerticalOffset="0">
                        <SplitButton.Content>
                            <i:Icon
                                FontSize="16"
                                Foreground="White"
                                Value="mdi-content-copy" />
                        </SplitButton.Content>
                        <SplitButton.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <MenuItem Click="CopyAsMarkdown_Click" Header="Copy as Markdown" />
                            </MenuFlyout>
                        </SplitButton.Flyout>
                    </SplitButton>
                </Grid>

                <DataGrid
                    Margin="0,8,0,0"
                    Background="#333538"
                    BorderBrush="#55656565"
                    BorderThickness="1"
                    CanUserReorderColumns="False"
                    CanUserResizeColumns="True"
                    CanUserSortColumns="True"
                    GridLinesVisibility="Horizontal"
                    IsReadOnly="True"
                    ItemsSource="{Binding StatsView}"
                    SelectionMode="Single">
                    <DataGrid.Styles>
                        <Style Selector="ScrollBar">
                            <Setter Property="AllowAutoHide" Value="False" />
                        </Style>
                        <Style Selector="DataGridColumnHeader">
                            <Setter Property="Foreground" Value="White" />
                        </Style>
                    </DataGrid.Styles>
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            x:DataType="search:IntegrationStatistic"
                            Binding="{Binding Filter}"
                            Header="Filter" />
                        <DataGridTextColumn
                            x:DataType="search:IntegrationStatistic"
                            Binding="{Binding TotalIntegrationDisplay}"
                            Header="Total (hr)"
                            SortMemberPath="TotalIntegration" />
                        <DataGridTextColumn
                            x:DataType="search:IntegrationStatistic"
                            Binding="{Binding Count}"
                            Header="Count" />
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>

            <GridSplitter
                Grid.Row="1"
                MinHeight="4"
                Margin="0,4"
                Background="#55656565"
                ResizeDirection="Rows" />

            <DockPanel Grid.Row="2">
                <Grid Margin="5,5,5,0" DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Text="Objects" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        Text="{Binding DistinctObjectNames.Count}"
                        TextAlignment="Right" />

                </Grid>

                <ListBox
                    x:Name="ObjectNameListBox"
                    Margin="0,12,0,0"
                    Background="#333538"
                    BorderBrush="#55656565"
                    BorderThickness="1"
                    ItemsSource="{Binding DistinctObjectNames}">
                    <ListBox.Styles>
                        <Style Selector="ListBoxItem">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem
                                            Command="{Binding #ObjectNameListBox.((search:SearchResultsViewModel)DataContext).SearchObjectNameCommand}"
                                            CommandParameter="{Binding}"
                                            Header="Search" />
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style Selector="ListBoxItem">
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListBox.Styles>
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="system:String">
                            <TextBlock
                                Padding="12,9,12,12"
                                Background="Transparent"
                                Text="{Binding}">
                                <interactivity:Interaction.Behaviors>
                                    <ia:EventTriggerBehavior EventName="DoubleTapped">
                                        <ia:InvokeCommandAction Command="{Binding #ObjectNameListBox.((search:SearchResultsViewModel)DataContext).SearchObjectNameCommand}" CommandParameter="{Binding}" />
                                    </ia:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </DockPanel>
        </Grid>
    </Grid>
</UserControl>
