# Build and test lumidex, create the installer and upload as an artifact.
# This workflow runs on every commit to main, feature, and bug branches.

name: Build and Test

on:
  push:
    branches:
      - 'main'
      - 'feature/**'
      - 'bug/**'

env:
  SOLUTION: Lumidex.sln
  PROJECT: Lumidex.Desktop/Lumidex.Desktop.csproj
 
jobs:
  build-win:
    runs-on: [self-hosted, windows, x64]
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Restore Tools
        run: dotnet tool restore
      - name: Restore
        run: dotnet restore ${{ env.SOLUTION }}
      - name: Build
        run: dotnet build ${{ env.SOLUTION }} -c Release --no-restore
      - name: Show Version
        run: dotnet tool run dotnet-gitversion /output
      - name: Test
        run: dotnet test ${{ env.SOLUTION }} -c Release --no-build

  windows-installer:
    runs-on: [self-hosted, windows, x64]
    needs: [build-win]
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x
      - name: Restore
        run: dotnet restore ${{ env.PROJECT }}
      - name: Tools
        run: dotnet tool restore
      - name: Publish
        run: dotnet publish ${{ env.PROJECT }} -r win-x64 --self-contained -c Release -o publish-win
      - name: Show Version
        run: dotnet tool run dotnet-gitversion
      - name: Installer
        run: |
          $VERSION=(dotnet tool run dotnet-gitversion /showvariable SemVer)
          & 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe' lumidex-installer-win.iss /DMyAppProductVersion=${VERSION}
      - uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          retention-days: 7
          name: windows-installer
          path: dist/win/*.exe
